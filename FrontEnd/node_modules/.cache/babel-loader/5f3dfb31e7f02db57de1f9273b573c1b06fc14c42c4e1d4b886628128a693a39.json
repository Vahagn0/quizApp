{"ast":null,"code":"var _jsxFileName = \"/home/vahagn/Desktop/Projects/quiz/src/answer.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Answers(_ref) {\n  _s();\n  let {\n    questions\n  } = _ref;\n  let [score, setScore] = useState(0);\n  let [i, setI] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  function nextAnswer(answer) {\n    debugger;\n    if (i <= 2) {\n      setI(i++);\n      if (answer) {\n        setScore(score + 1);\n      }\n      console.log(score);\n    } else {\n      setShowScore(true);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !showScore ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: questions[i].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), questions[i].answer.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"answer\",\n          onClick: () => nextAnswer(item.isTrue),\n          children: item.answerText\n        }, item.answerText, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this);\n      })]\n    }, void 0, true) : \"your score is \" + score\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(Answers, \"x8ieK/kU1MMIsglXqkAQgxSqBj4=\");\n_c = Answers;\nexport default Answers;\nvar _c;\n$RefreshReg$(_c, \"Answers\");","map":{"version":3,"names":["useState","Answers","questions","score","setScore","i","setI","showScore","setShowScore","nextAnswer","answer","console","log","question","map","item","isTrue","answerText"],"sources":["/home/vahagn/Desktop/Projects/quiz/src/answer.js"],"sourcesContent":["import { useState } from \"react\"\n\nfunction Answers({questions}){\n    let [score,setScore] = useState(0)\n    let [i,setI] = useState(0)\n    const [showScore,setShowScore] = useState(false)\n    \n    function nextAnswer(answer){\n        debugger\n        if(i <= 2){\n            setI(i++)\n            if(answer){\n                setScore(score + 1)\n            }\n            console.log(score);\n        }else{\n            setShowScore(true)\n        }\n        \n       \n    }\n\n    return(\n        <div>\n            {!showScore ?  <>\n            <div>{questions[i].question}</div>\n            {questions[i].answer.map(item => {\n                   return(\n                    <p className=\"answer\" onClick={() => nextAnswer(item.isTrue)} key={item.answerText}>\n                    {item.answerText}\n                    </p>\n                    )\n                }\n            )\n            }\n            </> : \"your score is \" + score\n                }\n        </div> \n    )\n  \n}\n\nexport default Answers"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAEhC,SAASC,OAAO,OAAa;EAAA;EAAA,IAAZ;IAACC;EAAS,CAAC;EACxB,IAAI,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC;EAClC,IAAI,CAACK,CAAC,EAACC,IAAI,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAC1B,MAAM,CAACO,SAAS,EAACC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEhD,SAASS,UAAU,CAACC,MAAM,EAAC;IACvB;IACA,IAAGL,CAAC,IAAI,CAAC,EAAC;MACNC,IAAI,CAACD,CAAC,EAAE,CAAC;MACT,IAAGK,MAAM,EAAC;QACNN,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;MACvB;MACAQ,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC;IACtB,CAAC,MAAI;MACDK,YAAY,CAAC,IAAI,CAAC;IACtB;EAGJ;EAEA,oBACI;IAAA,UACK,CAACD,SAAS,gBAAI;MAAA,wBACf;QAAA,UAAML,SAAS,CAACG,CAAC,CAAC,CAACQ;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAO,EACjCX,SAAS,CAACG,CAAC,CAAC,CAACK,MAAM,CAACI,GAAG,CAACC,IAAI,IAAI;QAC1B,oBACC;UAAG,SAAS,EAAC,QAAQ;UAAC,OAAO,EAAE,MAAMN,UAAU,CAACM,IAAI,CAACC,MAAM,CAAE;UAAA,UAC5DD,IAAI,CAACE;QAAU,GADmDF,IAAI,CAACE,UAAU;UAAA;UAAA;UAAA;QAAA,QAE9E;MAER,CAAC,CACJ;IAAA,gBAEE,GAAG,gBAAgB,GAAGd;EAAK;IAAA;IAAA;IAAA;EAAA,QAE5B;AAGd;AAAC,GAtCQF,OAAO;AAAA,KAAPA,OAAO;AAwChB,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}