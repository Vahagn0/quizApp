{"ast":null,"code":"var _jsxFileName = \"/home/vahagn/Desktop/Projects/quiz/src/Test.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TestComponent = _ref => {\n  let {\n    myData\n  } = _ref;\n  console.log(myData, 'in test');\n  console.log(typeof myData);\n  const q = myData;\n  console.log(q, 'asd');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), myData.map(data => {\n      /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true);\n};\n_c = TestComponent;\nexport default TestComponent;\nvar _c;\n$RefreshReg$(_c, \"TestComponent\");","map":{"version":3,"names":["React","TestComponent","myData","console","log","q","map","data","question"],"sources":["/home/vahagn/Desktop/Projects/quiz/src/Test.js"],"sourcesContent":["import React from 'react'\n\nconst TestComponent = ({myData}) =>{\n\n    console.log(myData, 'in test')\n    console.log(typeof(myData))\n    const q = myData\n    console.log(q, 'asd')\n    return (\n        <>\n            <h1>Test</h1>\n            {myData.map((data)=>{\n                <p>{data.question}</p>\n            })}\n            \n        </>\n    )\n}\n\nexport default TestComponent"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA;AAAA;AAEzB,MAAMC,aAAa,GAAG,QAAa;EAAA,IAAZ;IAACC;EAAM,CAAC;EAE3BC,OAAO,CAACC,GAAG,CAACF,MAAM,EAAE,SAAS,CAAC;EAC9BC,OAAO,CAACC,GAAG,CAAC,OAAOF,MAAO,CAAC;EAC3B,MAAMG,CAAC,GAAGH,MAAM;EAChBC,OAAO,CAACC,GAAG,CAACC,CAAC,EAAE,KAAK,CAAC;EACrB,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAa,EACZH,MAAM,CAACI,GAAG,CAAEC,IAAI,IAAG;MAChB;QAAA,UAAIA,IAAI,CAACC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAK;IAC1B,CAAC,CAAC;EAAA,gBAEH;AAEX,CAAC;AAAA,KAfKP,aAAa;AAiBnB,eAAeA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}